---
import GitHub from "./icons/GitHub.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import Nest from "./icons/Nest.astro";
import Flutter from "./icons/Flutter.astro";
import Angular from "./icons/Angular.astro";
import Supabase from "./icons/Supabase.astro";
import NodeJS from "./icons/Node.astro";
import Apple from "./icons/apple.astro";

const TAGS = {
  FLUTTER: {
    name: "Flutter",
    class: "bg-[#003159] text-white",
    icon: Flutter,
  },
  NODE: {
    name: "NodeJS",
    class: "bg-[#003159] text-white",
    icon: NodeJS,
  },
  ANGULAR: {
    name: "Angular",
    class: "bg-[#003159] text-white",
    icon: Angular,
  },
  SUPABASE: {
    name: "Supabase",
    class: "bg-[#003159] text-white",
    icon: Supabase,
  },
  NEST: {
    name: "NestJS",
    class: "bg-[#003159] text-white",
    icon: Nest,
  },
  APPLE: {
    name: "iCloud Sync",
    class: "bg-[#003159] text-white",
    icon: Apple,
  },
};
const PROJECTS = [
  {
    title: "MealMixer - MealPlanning App powered by AI",
    description:
      "Meal planning app powered by AI. Built with Flutter, Supabase, and OpenAI. Users can create meal plans and shopping lists based on their preferences.",
    link: "https://mealmixer.xyz/en/",
    image: "/projects/mealmixer.png",
    tags: [TAGS.FLUTTER, TAGS.NODE, TAGS.NEST, TAGS.SUPABASE],
  },
  {
    title:
      "AI PR Reviewer - A developer tool to review pull requests with AI, based on prompt engineering",
    description:
      "A developer tool to review pull requests with AI, based on prompt engineering",

    image: "/projects/aiprreviewer.png",
    tags: [TAGS.FLUTTER, TAGS.SUPABASE],
  },
  {
    title: "ToDoodle - Handwritten style todo app",
    description:
      "A mobile APP to manage your tasks with a handwritten style. Built with Flutter, In App Purchases, and iCloud Sync.",

    image: "/projects/todoodle.png",
    link: "https://apps.apple.com/hn/app/to-do-handwriting-style/id6747467870?l=en-GB",
    tags: [TAGS.FLUTTER, TAGS.APPLE],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt="Project Image"
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
